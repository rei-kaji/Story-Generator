import React, { useEffect, useState } from "react"; // @mui
import { Grid, Button, Container, Stack, Typography, Fab } from "@mui/material";
// components
import Iconify from "../components/iconify.jsx";
import {
  StoryPostCard,
  StoryPostsSort,
  StoryPostsSearch,
} from "../components/home/index.js";
// TODO: Change to import from MongoDB
import POSTS from "../components/home/blog.js";
import Link from "next/link.js";
import AddIcon from "@mui/icons-material/Add";
import Head from "next/head.js";
import axios from "axios";
const hostUrl = "https://story-generator.onrender.com";

const Home = () => {
  const [stories, setStories] = useState([]);
  const SORT_OPTIONS = [
    { value: "latest", label: "Latest" },
    { value: "popular", label: "Popular" },
    { value: "oldest", label: "Oldest" },
  ];

  const getAllStories = () => {
    let token = localStorage.getItem("token");
    axios
      .get(`${hostUrl}/api/story/stories`, {
        headers: {
          Authorization: `${token}`,
        },
      })
      .then((res) => {
        // console.log("res", res.data.stories);
        setStories(res.data.stories);
      })
      .catch((err) => {
        console.log(err);
      });
  };

  useEffect(() => {
    getAllStories();
  }, []);

  return (
    <>
      <Head>
        <title>StoryGenerator</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="../assets/icon.png" />
      </Head>
      <Container style={{ marginTop: "2rem" }}>
        <Fab
          variant="extended"
          aria-label="add"
          color="primary"
          style={{
            display: "block",
            zIndex: "20",
            position: "fixed",
            left: "50%",
            transform: "translateX(-50%)",
            bottom: "2rem",
            backdropFilter: "blur(15px)",
            opacity: "0.9",
          }}
        >
          <AddIcon />
          <Link href={"/storygenerator"}>New Post</Link>
        </Fab>

        <Stack
          mb={5}
          direction="row"
          alignItems="center"
          justifyContent="space-between"
        >
          <StoryPostsSearch posts={POSTS} />
          <StoryPostsSort options={SORT_OPTIONS} />
        </Stack>

        <Grid container spacing={3}>
          {stories.map((post, index) => (
            <StoryPostCard key={post.id} post={post} index={index} />
          ))}
        </Grid>
      </Container>
    </>
  );
};

export default Home;
